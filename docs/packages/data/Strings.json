{
  "name": "Strings",
  "package": "strings",
  "type": "Static library",
  "intro": "Strings_description.md",
  "examples": "StringsExamples",
  "tests": "strings_tests",
  "perfs": "strings_perfs",
  "functions": [
    {
      "name": "validate",
      "desc": "Check that a string is proper UTF-8. No gas benchmark as it is simply an aggregate of the cost of validating each rune (benchmarks for that can be found in the docs for [parseRune(uint)](#parseruneuint).",
      "visibility": "internal",
      "qualifier": "pure",
      "inParams": [
        {
          "name": "self",
          "type": "string",
          "refType": "memory",
          "desc": "The string."
        }
      ],
      "outParams": [
        {
          "type": "bool",
          "desc": "`true` if the string is valid UTF-8."
        }
      ],
      "ensures": [
        "See the library description."
      ]
    },
    {
      "name": "parseRune",
      "desc": "Check that a rune is valid UTF-8. The rune is provided as a pointer to a byte in memory.",
      "visibility": "internal",
      "qualifier": "pure",
      "inParams": [
        {
          "name": "bytepos",
          "type": "uint",
          "desc": "The memory address where the rune is stored."
        }
      ],
      "outParams": [
        {
          "name": "len",
          "type": "uint",
          "desc": "The length of the rune in bytes."
        }
      ],
      "ensures": [
        "See the library description."
      ],
      "gas": [
        [
          "Parsing a rune of length one",
          "PerfStringsParseRuneLengthOne"
        ],
        [
          "Parsing a rune of length two",
          "PerfStringsParseRuneLengthTwo"
        ],
        [
          "Parsing a rune of length three",
          "PerfStringsParseRuneLengthThree"
        ],
        [
          "Parsing a rune of length four",
          "PerfStringsParseRuneLengthFour"
        ]
      ]
    }
  ]
}